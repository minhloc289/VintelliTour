// src/app/api/attractions/[slug]/route.ts

import { NextResponse } from "next/server";
import clientPromise from "@/lib/mongodb";
import { ObjectId } from "mongodb"; // üî• Th√™m import ObjectId

export async function GET(
  request: Request,
  { params }: { params: { slug: string } }
) {
  try {
    const client = await clientPromise;
    const db = client.db();

    // üî• T√¨m location theo _id (ph·∫£i convert ObjectId)
    const location = await db.collection("locations").findOne({
      _id: new ObjectId(params.slug)
    });

    if (!location) {
      return NextResponse.json(
        { error: "Location not found" },
        { status: 404 }
      );
    }

    // üî• Enrich tabs t·ª´ d·ªØ li·ªáu location
    const enrichedLocation = {
      ...location,
      image: location.image?.[0] || "/img/VN.jpg", // L·∫•y ·∫£nh ƒë·∫°i di·ªán
      slug: params.slug, // Tr·∫£ lu√¥n slug (ch√≠nh l√† _id)
      tabs: [
        {
          id: "overview",
          label: "T·ªïng quan",
          content: {
            title: "Gi·ªõi thi·ªáu",
            description: location.description || "ƒêang c·∫≠p nh·∫≠t m√¥ t·∫£ ƒë·ªãa ƒëi·ªÉm.",
            image: location.image?.[0] || "/img/VN.jpg"
          }
        },
        {
          id: "history",
          label: "L·ªãch s·ª≠",
          content: {
            title: "L·ªãch s·ª≠ ph√°t tri·ªÉn",
            description: location.description_history || "Ch∆∞a c√≥ th√¥ng tin l·ªãch s·ª≠.",
            items: [
              "G·∫Øn li·ªÅn v·ªõi l·ªãch s·ª≠ ph√°t tri·ªÉn ƒë·ªãa ph∆∞∆°ng",
              "ƒêi·ªÉm ƒë·∫øn mang ƒë·∫≠m d·∫•u ·∫•n vƒÉn h√≥a",
              "ƒê·ªãa danh n·ªïi b·∫≠t khu v·ª±c"
            ],
            image: location.image?.[0] || "/img/VN.jpg"
          }
        },
        {
          id: "streetview",
          label: "Street View & 360¬∞",
          content: {
            title: "Kh√°m ph√° 360¬∞",
            description: "Tr·∫£i nghi·ªám to√†n c·∫£nh 360¬∞ s·ªëng ƒë·ªông.",
            streetViewUrl: location.streetViewUrls || [],
            panoramaUrl: location.image?.[0] || "/img/test.png"
          }
        }
      ]
    };

    return NextResponse.json(enrichedLocation);

  } catch (error) {
    console.error("Database error:", error);
    return NextResponse.json(
      { error: "Internal server error" },
      { status: 500 }
    );
  }
}
